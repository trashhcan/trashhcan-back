spring:
  profiles:
    include: SECRET-KEY

#  datasource:
#    url: jdbc:h2:tcp://localhost/~/test-trashhcan # 메모리 내 데이터베이스 URL
#    driver-class-name: org.h2.Driver # H2 드라이버 클래스
#    username: sa # 기본 사용자 이름
#    password: # 기본 비밀번호는 비워둡니다.
#    h2:
#      console:
#        enabled: true # H2 콘솔을 활성화합니다.
#        path: /h2-console # H2 콘솔의 접근 경로

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${database-host}/${database-name}
    username: ${database-username}
    password: ${database-password}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${client-id}
            client-secret: ${client-secret}
            scope:
              - email
              - profile
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  logging.level:
    org.hibernate.SQL: debug

  #  datasource:
  #    url: jdbc:h2:tcp://localhost/~/test-mutsa # 메모리 내 데이터베이스 URL
  #    driver-class-name: org.h2.Driver # H2 드라이버 클래스
  #    username: sa # 기본 사용자 이름
  #    password: # 기본 비밀번호는 비워둡니다.
  #  h2:
  #    console:
  #      enabled: true # H2 콘솔을 활성화합니다.
  #      path: /h2-console # H2 콘솔의 접근 경로
  #  jpa:
  #    hibernate:
  #      ddl-auto: create # Hibernate의 DDL 자동 생성 전략 (update, create, create-drop 등)
  #    properties:
  #      hibernate:
  #        format_sql: true
  #        dialect: org.hibernate.dialect.H2Dialect
  sql:
    init:
      mode: always # 애플리케이션 시작 시 스크립트 초기화 (기본값: embedded)
